/// My helpers to work with timers
package TimerHelpers

import TimerUtils

/// Allows to embedd timer to class 
public module EmbeddedTimerPeriodic
    private timer t
    
    /// Overload the function in your code, this is called when timer is expired
    protected abstract function callTimer(thistype cb)

    /// Start internal timer, if the second flag is on, trigger timer action immediatelly
    function start(real time, bool startCall)
        this.t = getTimer()
        t.setData(this castTo int)
        t.startPeriodic(time, function staticCallback)
        if startCall
            callTimer(this)

    /// Stop internal timer 
    function stop()
        t.pause()
    
    private static function staticCallback()
        let cb = (GetExpiredTimer().getData() castTo thistype)
        cb.callTimer(cb)
        
    ondestroy
        t.release()